name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]
        exclude:
          # Reduce matrix size for faster CI - only test Debug on Ubuntu
          - os: windows-latest
            build_type: Debug
          - os: macos-latest
            build_type: Debug
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.5.4"
          cache: true
          modules: 'qtbase qttools qtsvg'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.25'

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ninja-build \
            libgl1-mesa-dev \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xfixes0

      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_INSTALL_PREFIX=install \
            -G "Ninja"

      - name: Build project
        run: cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure --parallel 2 || true

      - name: Install project
        run: cmake --install build --config ${{ matrix.build_type }}

      - name: Upload build artifacts
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: flux-${{ matrix.os }}-${{ matrix.build_type }}
          path: |
            install/
            build/flux-gui/
            build/flux-cli/
          retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.5.4"
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck

      - name: Configure CMake with static analysis
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_CLANG_TIDY="clang-tidy;-checks=-*,readability-*,performance-*,modernize-*"

      - name: Build with static analysis
        run: cmake --build build --parallel 2 || true

      - name: Run cppcheck
        run: |
          cppcheck --enable=all --std=c++23 \
            --suppress=missingIncludeSystem \
            --suppress=unusedFunction \
            --error-exitcode=1 \
            flux-core/src/ flux-gui/src/ flux-cli/src/ || true
